from nonebot import logger
from nonebot.typing import T_State
from nonebot.matcher import Matcher
from nonebot.message import run_preprocessor
from nonebot.adapters import Bot, Event
from nonebot.exception import IgnoredException
from nonebot.adapters.cqhttp import GroupMessageEvent

from gocqapi import api
from utils.utils import ExploitCheck
from db.models.ban import Ban
from configs.config import BAN_TIME, BAN_CHEKC_FREQ, HIDDEN_PLUGINS, BAN_CHECK_PERIOD
from utils.msg_util import at

exploit = ExploitCheck(BAN_CHEKC_FREQ, BAN_CHECK_PERIOD)


@run_preprocessor
async def _exploit_check(matcher: Matcher, bot: Bot, event: Event, state: T_State):
    if not isinstance(event, GroupMessageEvent):
        return
    plugin_name = matcher.plugin_name
    if plugin_name in HIDDEN_PLUGINS:
        return
    if matcher.priority in range(0, 11) or matcher.priority in range(91, 101):
        return
    if state["_prefix"]["raw_command"]:
        if exploit.check(f'{event.user_id}{state["_prefix"]["raw_command"]}'):
            if await Ban.ban(event.user_id, 9, BAN_TIME * 60):
                logger.info(f"USER {event.user_id} 触发了恶意触发检测")
                await api.group_message(
                    event.group_id,
                    at(event.user_id) + f"检测到恶意触发命令，您将被封禁 {BAN_TIME} 分钟",
                )
            raise IgnoredException("检测到恶意触发命令")
        exploit.add(f'{event.user_id}{state["_prefix"]["raw_command"]}')
